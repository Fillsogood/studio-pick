name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build & Push
        run: |
          docker build -t logi5898/my-app:latest .
          docker push logi5898/my-app:latest

      - name: Deploy to Remote Server
        if: github.ref == 'refs/heads/develop'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DEPLOY_HOST:     ${{ secrets.DEPLOY_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          ssh -o StrictHostKeyChecking=no ubuntu@$DEPLOY_HOST << 'EOF'
            set -e

            # 네트워크 없으면 생성
            docker network inspect studio-pick-net >/dev/null 2>&1 || \
              docker network create studio-pick-net

            # Redis 컨테이너 없으면 실행
            docker ps -a --format '{{.Names}}' | grep -q studio-pick-redis || \
              docker run -d \
                --name studio-pick-redis \
                --network studio-pick-net \
                -p 6379:6379 \
                --restart always \
                redis:6-alpine

            # 기존 앱 중지 및 제거
            docker stop studio-pick-app || true
            docker rm studio-pick-app || true

            # 이미지 pull
            docker pull logi5898/my-app:latest

            # 앱 실행
            docker run -d \
              --name studio-pick-app \
              --network studio-pick-net \
              -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e SPRING_DATASOURCE_URL=${{ secrets.DB_URL }} \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e REDIS_HOST=studio-pick-redis \
              -e REDIS_PORT=6379 \
              -e REDIS_DB=${{ secrets.REDIS_DB }} \
              -e MAIL_HOST=smtp.gmail.com \
              -e MAIL_PORT=587 \
              -e MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
              -e MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} \
              -e TOSS_TEST_CLIENT_KEY=${{ secrets.TOSS_TEST_CLIENT_KEY }} \
              -e TOSS_TEST_SECRET_KEY=${{ secrets.TOSS_TEST_SECRET_KEY }} \
              -e TOSS_BASE_URL=https://api.tosspayments.com \
              -e AWS_REGION=ap-northeast-2 \
              -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
              -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
              -e AWS_S3_BUCKET=studio-pick \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e OAUTH_KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
              -e OAUTH_KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }} \
              logi5898/my-app:latest
          EOF
